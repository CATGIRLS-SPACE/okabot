<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>???? | ???? | ???? | okabot live stock view</title>
    </head>
    <body>
        <h1 class="title" id="title">okabot live stock view</h1>
        <div class="stocks">
            <div class="stock neko">
                <h3>NEKO</h3>
                <h4 id="neko-price">0</h4>
            </div>
            <div class="stock dogy">
                <h3>DOGY</h3>
                <h4 id="dogy-price">0</h4>
            </div>
            <div class="stock fxgl">
                <h3>FXGL</h3>
                <h4 id="fxgl-price">0</h4>
            </div>
        </div>
        <footer>2025 lilycatgirl</footer>
    </body>

    <style>
        @font-face {
            font-family: GenJyuuGothic;
            src: url(https://okayucdn.com/assets/fonts/GenJyuuGothic.ttf);
        }
        body {
            font-family: GenJyuuGothic;
            background-color: black;
            color: white;
            overflow: hidden;
        }
        footer {
            text-align: center;
            width: 100%;
            position: absolute;
            bottom: 8px;
        }
        .title {
            text-align: center;
            font-size: 3rem;
        }
        .stocks {
            display: flex;
            width: 100%;
            justify-content: space-evenly;
            text-align: center;
        }
        .stocks .stock h3 {
            font-size: 2.5rem;
            margin: 0;
        }
        .stocks .stock h4 {
            font-size: 4rem;
            margin: 0;
        }

        @media screen and (max-width: 600px) {
            .stocks {
                display: block;
            }
        }
    </style>

    <script>
        let last_prices = {
            neko: 0,
            dogy: 0,
            fxgl: 0,
        };
        let first = true;

        function scheduleNextUpdate() {
            const now = new Date();
            const minutes = now.getMinutes();
            const seconds = now.getSeconds();

            // Calculate time until the next multiple of 5 minutes
            // const delay = ((5 - (minutes % 5)) * 60 - seconds) * 1000;
            const delay = 1000;

            setTimeout(UpdatePrices, delay);
        }

        function UpdatePrices() {
            fetch("/api/stock")
                .then(async (data) => {
                    const title = document.getElementById("title");
                    title.innerHTML = "okabot live stock view";
                    title.style.color = "#fff";

                    const json = await data.json();

                    // Update each stock price
                    updateStockDisplay("neko", json.neko);
                    updateStockDisplay("dogy", json.dogy);
                    updateStockDisplay("fxgl", json.fxgl);

                    // Update the page title
                    document.title = `
                ${getTrend(last_prices.neko, json.neko)} ${json.neko} | 
                ${getTrend(last_prices.dogy, json.dogy)} ${json.dogy} | 
                ${getTrend(last_prices.fxgl, json.fxgl)} ${json.fxgl} | 
                okabot live stock view
            `;

                    // store new prices
                    last_prices = { ...json };

                    // reset first-run flag
                    first = false;

                    // schedule the next update
                    scheduleNextUpdate();
                })
                .catch((err) => {
                    console.error("Fetch error:", err);

                    // if something disconnected it somehow, it's not accurate anymore
                    const title = document.getElementById("title");
                    title.innerHTML = "DISCONNECTED!";
                    title.style.color = "#f00";
                    document.title = "DISCONNECTED | okabot live stock view";

                    // retry in 1 second if disconnected
                    setTimeout(UpdatePrices, 1000);
                });
        }

        function updateStockDisplay(id, newPrice) {
            const element = document.querySelector(`#${id}-price`);
            const trend = getTrend(last_prices[id], newPrice);
            element.innerHTML = `${trend} ${newPrice}`;
            element.style.color = getTrendColor(last_prices[id], newPrice);
        }

        function getTrend(oldPrice, newPrice) {
            return oldPrice < newPrice ? "↑" : oldPrice > newPrice ? "↓" : "⇅";
        }

        function getTrendColor(oldPrice, newPrice) {
            return oldPrice < newPrice
                ? "#0f0"
                : oldPrice > newPrice
                ? "#f00"
                : "#55e";
        }

        // start the first update
        UpdatePrices();
    </script>
</html>
